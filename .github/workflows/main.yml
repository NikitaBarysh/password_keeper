name: CI

on:
  push:
    branches:
      - mvp
  pull_request:
    branches:
      - mvp

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-cache-${{ github.sha }}
          restore-keys: |
            buildx-cache

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build \
            --build-arg PORT=8000 \
            --build-arg SERVICE=server/main.go \
            --build-arg DB_HOST=postgres \
            --build-arg DB_PORT=5432 \
            --build-arg DB_DATABASE=postgres \
            --build-arg DB_USERNAME=postgres \
            --build-arg DB_PASSWORD=qwerty \
            -t ${{ secrets.DOCKER_USERNAME }}/password-keeper-server:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/password-keeper-server:latest

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: qwerty
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Setup Go environment
        uses: actions/setup-go@v2

      - name: Setup go deps
        run: |
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Install Migrate
        run: |
          curl -LJO https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz
          tar -xvf migrate.linux-amd64.tar.gz
          mv migrate.linux-amd64 /usr/local/bin/migrate
          chmod +x /usr/local/bin/migrate

      - name: Migrate Database
        run: migrate -path ./schema -database 'postgres://postgres:qwerty@localhost:5432/postgres?sslmode=disable' up

      - name: Run Docker container
        run: docker run --network host --name my-server -d ${{ secrets.DOCKER_USERNAME }}/password-keeper-server:latest

      - name: Run Client Tests
        run: go test ./...

#      - name: Run Docker container
#        run: docker run --network host --name my-server -d ${{ secrets.DOCKER_USERNAME }}/password-keeper-server:latest
#
#      - name: Run Server Tests
#        run: docker exec my-server go test ./...

      - name: Cleanup
        run: |
          docker rm -f my-server
          docker rm -f postgres

#name: CI
#
#on:
#  push:
#    branches:
#      - mvp
#  pull_request:
#    branches:
#      - mvp
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    container: golang:1.20
#
#    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_PASSWORD: qwerty
#          POSTGRES_DB: postgres
#          POSTGRES_USER: postgres
#        ports:
#          - "5432:5432"
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#
#
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4.1.4
#
#      - name: Set Up Docker Buildx
#        uses: docker/setup-buildx-action@2
#
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#            path: /tmp/.buildx-cache
#            key: ${{ runner.os }-${{ github.sha }}
#            restore-keys: |
#              ${{ runner.os }}-buildx
#
#      - name: Setup Go environment
#        uses: actions/setup-go@v2
#
#      - name: Setup go deps
#        run: |
#          go install golang.org/x/tools/cmd/goimports@latest
#
#      - name: Install Migrate
#        run: |
#          curl -LJO https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz
#          tar -xvf migrate.linux-amd64.tar.gz
#          mv migrate.linux-amd64 /usr/local/bin/migrate
#          chmod +x /usr/local/bin/migrate
#
#      - name: Test
#        run: |
#          migrate -path ./schema -database 'postgres://postgres:qwerty@postgres:5432/postgres?sslmode=disable' up
#          sleep 3
#          go test ./...